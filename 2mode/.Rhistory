left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term"))
student_info_by_semester
student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term"))
student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term")) %>%
group_by(Num_year_term, Domain) %>%
mutate(N_by_domain = n())
aa <- student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term")) %>%
group_by(Num_year_term, Domain) %>%
mutate(N_by_domain = n())
View(aa)
aa <- student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term")) %>%
filter(!is.na(Domain)) %>%
group_by(Num_year_term, Domain) %>%
mutate(N_by_domain = n())
activities_interested_selected <- student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term")) %>%
filter(!is.na(Domain)) %>%
group_by(Num_year_term, Domain) %>%
summarise(N_by_domain = n())
activities_interested_selected <- student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term")) %>%
filter(!is.na(Domain)) %>%
group_by(Num_year_term, Domain) %>%
summarise(N_by_domain = n()) %>%
filter(N_domain >= cutoff_n,
Num_year_term >= cutoff_year) %>%
ungroup()
activities_interested_selected <- student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term")) %>%
filter(!is.na(Domain)) %>%
group_by(Num_year_term, Domain) %>%
summarise(N_by_domain = n()) %>%
filter(N_by_domain >= cutoff_n,
Num_year_term >= cutoff_year) %>%
ungroup()
View(activities_interested_selected)
i
student_info_by_semester
i
student_info_by_semester %>%
group_by(Domain, Num_year_term) %>%
count_(i)
student_info_by_semester %>%
group_by(Domain, Num_year_term) %>%
count_(i)
student_info_by_semester
student_info_by_semester
student_info_by_semester_domain_joined <- student_info_by_semester %>%
left_join(activities_interested, by = c("student_code" = "Source", "Num_year_term"))
N_by_domain_by_semester <- student_info_by_semester_domain_joined %>%
filter(!is.na(Domain)) %>%
group_by(Num_year_term, Domain) %>%
summarise(N_by_domain = n()) %>%
filter(N_by_domain >= cutoff_n,
Num_year_term >= cutoff_year) %>%
ungroup()
student_info_by_semester_domain_joined %>%
group_by(Domain, Num_year_term)
student_info_by_semester_domain_joined %>%
group_by(Domain, Num_year_term) %>%
count_(i)
# expected_prob <-
student_info_by_semester_domain_joined %>%
group_by(Domain, Num_year_term) %>%
count_(i) %>% View()
expected_prob
student_info_by_semester
student_info_by_semester %>%
group_by(Domain, Num_year_term)
student_info_by_semester %>%
group_by(Domain, Num_year_term)
student_info_by_semester %>%
group_by(Domain, Num_year_term)
student_info_by_semester %>%
group_by(Domain, Num_year_term)
student_info_by_semester %>%
group_by(Domain, Num_year_term)
student_info_by_semester
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>% View()
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>% View()
student_info_for_idx <- student_info %>%
# 출신교 join: 해외학교 및 편입 제외
left_join(network_preschool %>%
select(Source, Target) %>%
rename(출신교 = Target), by = c("student_code" = "Source")) %>%
mutate(출신교 = case_when((국적=="KOR" & !grepl("편입", 입학유형)) ~ 출신교,
TRUE ~ NA_character_))
student_info_by_semester <- student_info_for_idx %>%
mutate(ent_year_term = paste(입학년도, 입학학기, sep="_"),
grd_year_term = paste(졸업년도, 졸업학기, sep="_")) %>%
left_join(year_term_tl[,4:5], by = c("ent_year_term" = "year_term")) %>%
left_join(year_term_tl[,4:5], by = c("grd_year_term" = "year_term"))  %>%
mutate(재학기간 = case_when(학적상태=="재학" ~ as.integer(40 + 1 - Num_year_term.x),
학적상태=="졸업" ~ (Num_year_term.y  - Num_year_term.x))) %>%
rename(Num_ent_year_term = Num_year_term.x,
Num_grd_year_term = Num_year_term.y)  %>%
# 년도_학기별 재학생
uncount(재학기간) %>%
group_by(student_code) %>%
mutate(Num_year_term = Num_ent_year_term + row_number()-1) %>%
left_join(year_term_tl[,4:5], by = c("Num_year_term")) %>%
mutate(년도 = as.numeric(str_extract(year_term, "[0-9]{4}"))) %>%
# 군입대 휴학생들 제거
anti_join(network_leaveOfAbsence %>%
filter(Target == "군복무휴학"), by = c("student_code" = "Source", "Num_year_term")) %>%
# 학기별 학년 및 나이
mutate(나이 = 나이 + (년도 - 입학년도)) %>%
left_join(network_school_year_age %>%
filter(Domain == "학년") %>% # 나이는 위에서 따로 계산
pivot_wider(id = c('Source', "Num_year_term"),
names_from = Domain, values_from = Target),
by = c("student_code" = "Source", "Num_year_term")) %>%
# 수료 이후 학년은 이전 학년으로 고정
group_by(식별자) %>%
fill(학년, .direction = "down") %>%
ungroup() %>%
as_tibble()
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>% View()
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>% View()
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>% View()
n
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>%
mutate(total_N = sum(n()),
q = n / total_N) %>% View()
i = "성별"
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>%
mutate(total_N = sum(n()),
q = n / total_N) %>% View()
i = "출신교"
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>%
mutate(total_N = sum(n()),
q = n / total_N) %>% View()
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i)
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i)
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i)
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate))
expected_prob <-
student_info_by_semester %>%
group_by(Num_year_term) %>%
count_(i) %>%
rename(cate = i) %>%
filter(!is.na(cate)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year)
student_info_by_semester
student_info_by_semester %>%
pivot_longer(cols = list_attributes, names_to = cate, values_to = attribute)
# expected_prob <-
student_info_by_semester %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(!is.factor, is.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(!is.factor(.), is.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(!is.factor(.), is.factor()) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(is.numeric, is.character) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(is.numeric, is.character()) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(is.numeric(.), is.character()) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(~!is.factor(.), is.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
student_info_by_semester %>%
mutate_at(colnames %in% list_attributes, is.factor)
student_info_by_semester %>%
mutate_at(colnames() %in% list_attributes, is.factor)
student_info_by_semester %>%
mutate_if(~colnames() %in% list_attributes, is.factor)
student_info_by_semester %>%
mutate_if(~colnames(.) %in% list_attributes, is.factor)
list_attributes
student_info_by_semester %>%
mutate_if(~colnames(.) %in% list_attributes, is.factor)
student_info_by_semester %>%
mutate_at(vars(contains(list_attribute)), is.factor)
list_attribute
# 분석 활동 설정
list_attributes <- c("성별", "국적", "출신교",
"대학", "학과", "입학유형",
"학년", "나이")
# expected_prob <-
student_info_by_semester %>%
mutate_at(vars(contains(list_attributes)), is.factor)
student_info_by_semester %>%
mutate_if(~colnames()=="성별", is.factor)
student_info_by_semester %>%
mutate_if(~colnames(.)=="성별", is.factor)
student_info_by_semester %>%
mutate_if(~colnames(.)=="성별", is.factor())
student_info_by_semester %>%
mutate_if(~names(.)=="성별", is.factor)
student_info_by_semester %>%
mutate_if(~names(.) %in% list_attributes, is.factor)
# expected_prob <-
student_info_by_semester %>%
mutate_if(~names(.) %in% list_attributes, is.factor(.))
# expected_prob <-
student_info_by_semester %>%
mutate_if(~names(.) %in% list_attributes, is.character)
list_attributes
# expected_prob <-
student_info_by_semester %>%
mutate_if(~names(.) %in% list_attributes, funcs(is.character))
# expected_prob <-
student_info_by_semester %>%
mutate_if(~names(.) %in% list_attributes, funs(is.character))
# expected_prob <-
student_info_by_semester %>%
mutate_if(~names(.) %in% list_attributes, funs(is.character(.)))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, funs(is.character(.)))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, funs(is.character()))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, funs(is.character(.)))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, funs(is.character(.)))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, funs(is.character(.)))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, funs(is.character(.)))
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, as.character)
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, as.factor)
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute")
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>% View()
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>% View()
group_by(Num_year_term, cate)
# expected_prob <-
student_info_by_semester %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>%
group_by(Num_year_term, cate) %>%
count_(i)
# expected_prob <-
student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>%
group_by(Num_year_term, cate) %>%
summarise(n  = n())
# expected_prob <-
student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>%
group_by(Num_year_term, cate) %>%
summarise(n  = n()) %>% View()
# expected_prob <-
student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n()) %>% View()
student_info_by_semester <- student_info_for_idx %>%
mutate(ent_year_term = paste(입학년도, 입학학기, sep="_"),
grd_year_term = paste(졸업년도, 졸업학기, sep="_")) %>%
left_join(year_term_tl[,4:5], by = c("ent_year_term" = "year_term")) %>%
left_join(year_term_tl[,4:5], by = c("grd_year_term" = "year_term"))  %>%
mutate(재학기간 = case_when(학적상태=="재학" ~ as.integer(40 + 1 - Num_year_term.x),
학적상태=="졸업" ~ (Num_year_term.y  - Num_year_term.x))) %>%
rename(Num_ent_year_term = Num_year_term.x,
Num_grd_year_term = Num_year_term.y)  %>%
# 년도_학기별 재학생
uncount(재학기간) %>%
group_by(student_code) %>%
mutate(Num_year_term = Num_ent_year_term + row_number()-1) %>%
left_join(year_term_tl[,4:5], by = c("Num_year_term")) %>%
mutate(년도 = as.numeric(str_extract(year_term, "[0-9]{4}"))) %>%
# 군입대 휴학생들 제거
anti_join(network_leaveOfAbsence %>%
filter(Target == "군복무휴학"), by = c("student_code" = "Source", "Num_year_term")) %>%
# 학기별 학년 및 나이
mutate(나이 = 나이 + (년도 - 입학년도)) %>%
left_join(network_school_year_age %>%
filter(Domain == "학년") %>% # 나이는 위에서 따로 계산
pivot_wider(id = c('Source', "Num_year_term"),
names_from = Domain, values_from = Target),
by = c("student_code" = "Source", "Num_year_term")) %>%
# 수료 이후 학년은 이전 학년으로 고정
group_by(식별자) %>%
fill(학년, .direction = "downup") %>%
ungroup() %>%
as_tibble()
# expected_prob <-
student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes, names_to = "cate", values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n()) %>% View()
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n())
expected_prob
expected_prob %>%
filter(!is.na(attribute))
expected_prob
expected_prob %>%
filter(!is.na(attribute)) %>%
mutate(total_N = sum(n),
q = n / total_N)
expected_prob %>%
filter(!is.na(attribute)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year) %>% View()
expected_prob
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n()) %>%
filter(!is.na(attribute)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year) %>% View()
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n()) %>%
filter(!is.na(attribute)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year)
expected_prob
?fct_lump
N_by_domain_by_semester <- student_info_by_semester_domain_joined %>%
filter(!is.na(Domain)) %>%
group_by(Num_year_term, Domain) %>%
summarise(N_by_domain = n()) %>%
filter(Num_year_term >= cutoff_year) %>%
ungroup()
cutoff_n = 10 # attribute당 최소 인원
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n()) %>%
filter(!is.na(attribute)) %>%
fct_lump_min(min = cutoff_n) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year)
expected_prob
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
summarise(n  = n()) %>%
filter(!is.na(attribute)) %>%
mutate(attribute = fct_lump_min(attribute, min = cutoff_n)) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year)
expected_prob
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
filter(!is.na(attribute)) %>%
mutate(attribute = fct_lump_min(attribute, min = cutoff_n)) %>%
summarise(n  = n()) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year)
expected_prob <-  student_info_by_semester %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Num_year_term, cate, attribute) %>%
filter(!is.na(attribute)) %>%
summarise(n  = n()) %>%
mutate(total_N = sum(n),
q = n / total_N) %>%
filter(Num_year_term >= cutoff_year)
expected_prob
student_info_by_semester_domain_joined
student_info_by_semester
student_info_by_semester_domain_joined
student_info_by_semester
student_info_by_semester_domain_joined %>%
group_by(Domain, Num_year_term)
student_info_by_semester_domain_joined %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute")
student_info_by_semester_domain_joined %>%
select(-식별자) %>%
mutate_if(names(.) %in% list_attributes, as.factor) %>%
pivot_longer(cols = list_attributes,
names_to = "cate",
values_to = "attribute") %>%
group_by(Domain, Num_year_term, attribute) %>%
filter(!is.na(attribute)) %>%
summarise(n  = n())
