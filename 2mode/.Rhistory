# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > 10) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
acast(formula = perspective ~ element)
optimum_raw %>%
group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > 10) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(.x$성적우수표창 ~ .x$element, data = .x)))
optimum_raw %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(.x$성적우수표창 ~ .x$element, data = .x)))
optimum_raw %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(성적우수표창 ~ element, data = .x)))
optimum_raw %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(성적우수표창 ~ 성별, data = .x)))
optimum_raw %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
select(성적우수표창)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
optimum_temp <- optimum_raw %>%
group_by(perspective) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
summarise_at(.vars = criteria, .funs = c(mean = "mean"), na.rm=T) %>%
group_by(perspective) %>%
mutate(Num_row = 1:n()) %>%
ungroup() %>%
mutate(test = rnorm(1))
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(test ~ 성별, data = .x)))
optimum_temp <- optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
summarise_at(.vars = criteria, .funs = c(mean = "mean"), na.rm=T) %>%
group_by(perspective) %>%
mutate(Num_row = 1:n()) %>%
ungroup()
optimum_temp <- optimum_raw %>%
group_by(perspective) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
summarise_at(.vars = criteria, .funs = c(mean = "mean"), na.rm=T) %>%
group_by(perspective) %>%
mutate(Num_row = 1:n()) %>%
ungroup()
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
select(성적우수표창)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(test ~ 성별, data = .x)))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest()
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
filter(is.na(성별))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
filter(is.na(test))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
lm(test ~ 성별, data = .)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(test ~ ., data = .x)))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > 10) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(test ~ ., data = .x)))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n())
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
replace(is.na(.), 0) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(test ~ ., data = .x)))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n())
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria))
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria)) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria, test)) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria, test)) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria, "test")) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria, "test")) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = rnorm(1)) %>%
select_if(names(.) %in% c("element", criteria, "test")) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = rnorm()) %>%
select_if(names(.) %in% c("element", criteria, "test")) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = 10) %>%
select_if(names(.) %in% c("element", criteria, "test")) %>%
replace(is.na(.), 0)
optimum_raw %>%
mutate(test = 10) %>%
select_if(names(.) %in% c("element", criteria, "test")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element)
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element)
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1)
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element)
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1)
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
arrange(n_within_perspective_and_element)
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
arrange(n_within_perspective_and_element) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(test ~ ., data = .x)))
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
arrange(n_within_perspective_and_element) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(1 ~ ., data = .x)))
optimum_raw %>%
select_if(names(.) %in% c("element", criteria, "perspective")) %>%
replace(is.na(.), 0) %>%
group_by(perspective, element) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
arrange(n_within_perspective_and_element) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(n_within_perspective_and_element ~ ., data = .x)))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
arrange(n_within_perspective_and_element)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학) %>%
mutate(n_within_perspective_and_element = n())
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
arrange(n_within_perspective_and_element)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(n_within_perspective_and_element ~ ., data = .x)))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
group_by(perspective) %>%
nest() %>%
mutate(models = map(data, ~ lm(입학년도 ~ 성별, data = .x)))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(대학) %>%
mutate(n_within_perspective_and_element = n()) %>%
filter(n_within_perspective_and_element > 1) %>%
group_by(perspective) %>%
nest()
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
mutate(n_within_element = n()) %>%
filter(n_within_element > 1) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > n_within_element*2)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
mutate(n_within_element = n()) %>%
filter(n_within_element > 1) %>%
group_by(perspective)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
mutate(n_within_element = n()) %>%
filter(n_within_element > 1) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n())
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
mutate(n_within_element = n()) %>%
filter(n_within_element > 1) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > n_within_element*2) %>%
lm(입학년도 ~ 성별)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
mutate(n_within_element = n()) %>%
filter(n_within_element > 1) %>%
group_by(perspective) %>%
mutate(n_within_perspective = n()) %>%
filter(n_within_perspective > n_within_element*2) %>%
lm(입학년도 ~ 성별, data = .)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
lm(입학년도 ~ 성별, data = .)
mutate(model = map(data, lm(입학년도 ~ 성별, data = .x))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(model = map(data, lm(입학년도 ~ 성별, data = .x)))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(model = map(data, lm(입학년도 ~ 성별, data = .x)))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(model = map(data, ~ lm(입학년도 ~ 성별, data = .x)))
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(입학년도 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(입학년도 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied) %>% View()
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(입학년도 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied) %>% View()
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(입학년도 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(입학년도 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(성적우수표창) ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(성적우수표창 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied)
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(성적우수표창 ~ 성별, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied) %>%
filter(term != "(Intercept)")
optimum_raw %>%
replace(is.na(.), 0) %>%
group_by(element) %>%
# mutate(n_within_element = n()) %>%
# filter(n_within_element > 1) %>%
# group_by(perspective) %>%
# mutate(n_within_perspective = n()) %>%
# filter(n_within_perspective > n_within_element*2) %>%
group_by(대학) %>%
nest() %>%
mutate(fit = map(data, ~ lm(성적우수표창 ~ element, data = .x)),
tidied = map(fit, tidy)) %>%
unnest(tidied) %>%
filter(term != "(Intercept)")
# 개방성 측면에서의 다양성
edges %>%
distinct(Domain)
a+1
a
1+1
# 개방성 측면에서의 다양성
edges %>%
distinct(Domain) %>% View()
# 개방성 측면에서의 다양성
aa <- edges %>%
distinct(Domain) %>% as.vector()
aa
